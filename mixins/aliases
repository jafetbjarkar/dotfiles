#!/usr/bin/env zsh

############
# TERMINAL #
############
alias aliases='code ~/dotfiles/mixins/aliases'
alias aliasesprivate='code ~/dotfiles/mixins/private'
alias zshreload='source ~/.zshrc'

alias lc='colorls --gs --sd -lA'
alias lcc='colorls --gs --sd --tree'

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'


##########
# FINDER #
##########

alias f='open -a Finder ./' # Also aliased to 'ofd' from osx plugin

alias show='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder'
alias hide='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder'

alias dotfiles='cd $HOME/dotfiles/'
alias dropbox='cd $HOME/Dropbox/'
alias sites='cd $HOME/Sites/'

trash () { command mv "$@" ~/.Trash ; }    # trash:        Moves a file to the MacOS trash
ql () { qlmanage -p "$*" >& /dev/null; }   # ql:           Opens any file in MacOS Quicklook Preview


##############
# NETWORKING #
##############

# IP addresses
alias myip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"
alias ping='ping -c 5'      # Pings with 5 packets, not unlimited


###########
# VARIOUS #
###########

alias restart='sudo shutdown -r now'
alias finder='open -a "Finder"'
alias at='open -a "Atom"'
alias n='code ~/notes.md'
alias notes='code ~/notes.md'

# Get week number
alias week='date +%V'

# Stuff I never really use but cannot delete either because of http://xkcd.com/530/
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume output volume 100'"

# Disk space
alias df='df -h'            # Disk free, in gigabytes, not bytes
alias du='du -h -c'         # Calculate total disk usage for a folder

# Kill all the tabs in Chrome to free up memory
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

#   ii:  display useful host related informaton
ii() {
  print -P "\nYou are logged on $FG[003]$HOST"
  print -P "\nAdditionnal information:$reset_color " ; uname -a
  print -P "\n$FG[003]Users logged on:$reset_color " ; w -h
  print -P "\n$FG[003]Current date:$reset_color " ; date
  print -P "\n$FG[003]Machine stats:$reset_color " ; uptime
  print -P "\n$FG[003]Current network location:$reset_color " ; scselect
  print -P "\n$FG[003]Public facing IP Address:$reset_color " ; myip
  print -P "\n$FG[003]Local IP Address:$reset_color "; localip
  print -P "\n$FG[003]DNS Configuration:$reset_color " ; scutil --dns | sed -ne '/resolver #1/,$ p' | head -n +6
  print
}

# Dictionary search, prefix ^ to get only words starting letters. ex: ^wh
dict() {
    grep "$@" /usr/share/dict/words
}

##################
# iTerm Profiles #
##################

alias default='echo -e "\033]50;SetProfile=Default\x7"'
alias monokai='echo -e "\033]50;SetProfile=Monokai\x7"'
alias green='echo -e "\033]50;SetProfile=Green\x7"'
alias blue='echo -e "\033]50;SetProfile=Blue\x7"'
alias red='echo -e "\033]50;SetProfile=Red\x7"'


###############
# DEVELOPMENT #
###############

alias npmlist='npm list -g --depth=0'
alias npmlist1='npm list -g --depth=1'

#######
# AGR #
#######

alias agrvpn='echo "password" | sudo openconnect https://vpn.agrdynamics.com --background --user=username --passwd-on-stdin'
alias vpnstop='sudo killall -SIGINT openconnect'

# AGR
export agrroot=~/Sites/agr
export agrngroot=~/Sites/agr/agr-client
alias agr='cd $agrroot && nvm use 12 && monokai';
alias agrng='cd $agrngroot && nvm use 12 && red';

alias serve='agrng && ng serve --proxy-config jafet/proxy.conf.vagrant.json'
alias servebm='agrng && ng serve --proxy-config jafet/proxy.conf.yoshi-bm.json'
alias test='agrng && npm run test'
alias lint='agrng && ng lint'
alias buildprod='agrng && ng build --prod'
alias build-prod='agrng && ng build --prod'
alias e2e='agrng && ng e2e --configuration=no-serve'
alias e2e+='agrng && e2e && agr && me restore-db && agrng'

# Backend
alias me='agr && npm run me -- '
alias build-bm='agr && me bd-dev-bm && run-forecast && backup-db'
alias build-financial-planning='agr && me bd-dev-financial_planning && run-forecast && backup-db'
alias build-inventory='agr && me bd-dev-inventory && run-forecast && backup-db'
alias build-forecast='agr && npm run me -- deploy-forecast-svc'
alias build-api='agr && me build-web-api'
alias debug-api='agr && me dev-debug-api'
alias install-db='agr && me build-dev-sql-nav2009'
alias restore-db='agr && me dev-restore-prod-db'
alias backup-db='agr && me dev-backup-prod-db'
alias export-db='agr && me dev-export-prod-db'
alias import-db='agr && me dev-import-prod-db'
alias run-forecast='agr && me db-run-forecasts'
alias stop-forecast='agr && me undeploy-forecast-svc'
alias start-forecast='agr && me deploy-forecast-svc'
alias clean-all='agr && me cleanbuild-dotnet && me cleanbuild-sql && me cleanbuild-web-client'
alias log='agr && cd log; open -t `ls -1t | head -1`' # open the most recently modified log file

# Migration
export migrationroot=~/Sites/agr/scripts/migration;
alias migration='cd $migrationroot && default';

# Documentation
export docroot=~/Sites/agr-documentation
alias doc='cd $docroot && blue'
alias doca='cd $docroot/assortment && blue'
alias doci='cd $docroot/inventory && blue'
alias docp='cd $docroot/planning && blue'
alias doct='cd $docroot/technical && blue'

# Migration
export migrationroot=~/Sites/agr-installer/migration
alias migration='cd $migrationroot && monokai'
alias migratestart='nvm use 12 && cd $migrationroot && npm run start'
alias migraterevert='nvm use 12 && cd $migrationroot && npm run revert'